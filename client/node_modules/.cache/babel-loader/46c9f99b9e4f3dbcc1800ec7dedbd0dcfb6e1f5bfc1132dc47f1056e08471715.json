{"ast":null,"code":"var _jsxFileName = \"/Users/nikola/Desktop/novi-digital-test/client/src/components/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { logout } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [user, setUser] = useState({\n    firstName: '',\n    lastName: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Here you should implement a function to fetch the user data from your backend.\n    // As a placeholder, I'm using static data.\n    setUser({\n      firstName: 'John',\n      lastName: 'Doe'\n    });\n  }, []);\n  const handleLogout = async () => {\n    try {\n      await logout();\n      navigate('/');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome \", user.firstName, \" \", user.lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"HcDp8wTzSz/JZEvM/hgX8gwqWq4=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","logout","jsxDEV","_jsxDEV","Home","_s","user","setUser","firstName","lastName","navigate","handleLogout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/nikola/Desktop/novi-digital-test/client/src/components/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { logout } from '../api';\n\nconst Home: React.FC = () => {\n    const [user, setUser] = useState({ firstName: '', lastName: '' });\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Here you should implement a function to fetch the user data from your backend.\n        // As a placeholder, I'm using static data.\n        setUser({ firstName: 'John', lastName: 'Doe' });\n    }, []);\n\n    const handleLogout = async () => {\n        try {\n            await logout();\n            navigate('/');\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Welcome {user.firstName} {user.lastName}</h1>\n            <button onClick={handleLogout}>Log Out</button>\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAAES,SAAS,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACjE,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ;IACA;IACAS,OAAO,CAAC;MAAEC,SAAS,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMV,MAAM,CAAC,CAAC;MACdS,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACIT,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,GAAI,UAAQ,EAACR,IAAI,CAACE,SAAS,EAAC,GAAC,EAACF,IAAI,CAACG,QAAQ;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjDf,OAAA;MAAQgB,OAAO,EAAER,YAAa;MAAAG,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEd,CAAC;AAACb,EAAA,CAzBID,IAAc;EAAA,QAECJ,WAAW;AAAA;AAAAoB,EAAA,GAF1BhB,IAAc;AA2BpB,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}